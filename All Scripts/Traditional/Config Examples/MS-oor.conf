################################################
#
# General configuration
#
# debug: Debug levels [0..3]
# map-request-retries: Additional Map-Requests to send per map cache miss
# log-file: Specifies log file used in daemon mode. If it is not specified,  
#   messages are written in syslog file

debug                  = 1 
map-request-retries    = 3
log-file               = /var/log/oor.log
 
# Define the type of LISP device LISPmob will operate as 
#
# operating-mode can be any of:
# xTR, RTR, MN, MS
#
operating-mode         = MS

# For the rest of this file you can delete the sections that does not apply to 
# the LISP device selected in operating-mode


################################################
#
# MS configuration
#

# Control messages are received and generated through this interface
# Only one interface is supported

control-iface = ens6

# Define an allowed lisp-site to be registered into the Map Server. Several
# lisp-site can be defined.
# 
#   eid-prefix: Accepted EID prefix (IPvX/mask)
#   key-type: Only 1 supported (HMAC-SHA-1-96)
#   key: Password to authenticate the received Map-Registers
#   iid: Instance ID associated with the lisp site [0-16777215]
#   accept-more-specifics [true/false]: Accept more specific prefixes
#     with same authentication information 

lisp-site {
    eid-prefix            = 192.168.0.0/16
    key-type              = 1
    key                   = sdn18
    iid                   = 0
    accept-more-specifics = true
}

#lisp-site {
#    eid-prefix            = 192.168.5.0/24
#    key-type              = 1
#    key                   = sdn18
#    iid                   = 2
#    accept-more-specifics = false
#}

# Define a static registered mapping. New Map-Registers overwrites
# the information of this mapping. You can define several eid-prefix.
#   eid-prefix: EID prefix (IPvX/mask) of the mapping
#   iid: Instance ID associated with the lisp site [0-16777215]
#   address: It could be one of the following cases
#      - IPv4 or IPv6 address of the RLOC
#      - ELP name
#   priority [0-255]: Priority for the RLOC of the interface. Locators
#     with lower values are more preferable. This is used for both incoming
#     policy announcements and outgoing traffic policy management
#   weight [0-255]: When priorities are the same for multiple RLOCs, the weight
#     indicates how to balance unicast traffic between them

#ms-static-registered-site {
#    eid-prefix          = 192.168.5.0/24
#    iid                 = 2
#     rloc-address {
#        address         = 10.10.3.2
#        priority        = 1
#        weight          = 10
#    }
#}

###############################################
#
# Tunnel Router general configuration
# Common for xTR, RTR & MN
#

# encapsulation: Encapsulation that will use OOR in the data plane. Could be
#   LISP or VXLAN-GPE. LISP is selected by default

#encapsulation          = <LISP/VXLAN-GPE>


# RLOC probing configuration
#   rloc-probe-interval: interval at which periodic RLOC probes are sent
#     (seconds). A value of 0 disables RLOC probing
#   rloc-probe-retries: RLOC probe retries before setting the locator with
#     status down. [0..5]
#   rloc-probe-retries-interval: interval at which RLOC probes retries are
#     sent (seconds) [1..rloc-probe-interval]

#rloc-probing {
#    rloc-probe-interval             = 30
#    rloc-probe-retries              = 2
#    rloc-probe-retries-interval     = 5
#}

# Encapsulated Map-Requests are sent to this Map-Resolver
# You can define several Map-Resolvers, seprated by comma. Encapsulated 
# Map-Request messages will be sent to only one.
#   address: IPv4 or IPv6 address of the map-resolver  

#map-resolver        = {
#	<ip-address>	
#}

# Static Map Entry of the Map Cache. Several eid-prefix can be defined.
#   eid-prefix: EID prefix (ip-prefix/mask) of the mapping
#   iid: Instance ID associated to the EID. When using VXLAN-GPE, iid configures
#     the VNI of the mapping. [0-16777215]
#   address: It could be one of the following cases
#      - IPv4 or IPv6 address of the RLOC
#      - ELP name
#   priority [0-255]: Priority for the RLOC. Locators with
#     lower values are more preferable. This is used for both incoming
#     policy announcements and outgoing traffic policy management.
#   weight [0-255]: When priorities are the same for multiple RLOCs, the weight
#     indicates how to balance unicast traffic between them.

#static-map-cache {
#    eid-prefix          = <ip-prefix/mask>  
#    iid                 = 0
#    rloc-address {
#        address         = <string>
#        priority        = <int>
#        weight          = <int>
#    }
#}

###############################################
#
# RTR configuration
#

# List of interfaces to be used as outgoing interfaces for the packets sent
# by the RTR. Several rtr-ifaces can be defined. 
#   iface: interface containing the RLOCs to be used for outgoing traffic 
#   ip_version: 4 to use the IPv4 address of the interface and 6 to use the IPv6 
#     address of the interface
#   priority [0-255]: Priority for the RLOC of the interface. Locators
#     with lower values are more preferable. This is used for outgoing
#     traffic policy management.
#   weight [0-255]: When priorities are the same for multiple RLOCs, the weight
#     indicates how to balance unicast traffic between them.

#rtr-ifaces {
#    rtr-iface {
#        iface           = <iface-name>
#        ip_version      = <4/6>
#        priority        = <int>
#        weight          = <int>
#    }
#}

###############################################
#
# xTR & MN configuration
#

# NAT Traversl configuration. 
#   nat_traversal_support: check if the node is behind NAT.

#nat_traversal_support  = off

# Map-Registers are sent to this Map-Server
# You can define several Map-Servers. Map-Register messages will be sent to all
# of them.
#   address: IPv4 or IPv6 address of the map-server
#   key-type: Only 1 supported (HMAC-SHA-1-96)
#   key: password to authenticate with the map-server
#   proxy-reply [on/off]: Configure map-server to Map-Reply on behalf of the xTR

#map-server {
#        address        = <ip-address>
#        key-type       = 1
#        key            = <password>
#        proxy-reply    = <on/off>
#}

# Packets addressed to non-LISP sites will be encapsulated to this Proxy-ETR
# You can define several Proxy-ETR for IPv4 EIDs and for IPv6 EIDs. Traffic 
# will be balanced according to the priority and weight.
#   address: IPv4 or IPv6 address of the Proxy-ETR
#   priority [0-255]: Proxy-ETR with lower values are more preferable.
#   weight [0-255]: When priorities are the same for multiple Proxy-ETRs,
#     the weight indicates how to balance unicast traffic between them.

# Proxy for IPv4 EIDs
#proxy-etr-ipv4 {
#        address     = <ip-address>
#        priority    = <int>
#        weight      = <int>
#}

# Proxy for IPv6 EIDs
#proxy-etr-ipv6 {
#        address     = <ip-address>
#        priority    = <int>
#        weight      = <int>
#}

# IPv4 / IPv6 EID of the node.
#   eid-prefix: EID prefix (ip-prefix/mask) of the mapping
#   iid: Instance ID associated to the EID. When using VXLAN-GPE, iid configures
#     the VNI of the mapping. [0-16777215]
# Two types of RLOCs can be defined:
#   rloc-address: Specifies directly the RLOC of the interface
#     address: It could be one of the following cases
#       - IPv4 or IPv6 address of the RLOC. Address should exist and
#        be assigned to an UP interface during startup process otherwise
#        it is discarded.
#       - ELP name
#   rloc-iface: Specifies the interface associated with the RLOC
#     interface: interface containing the RLOCs associated to this mapping 
#     ip_version: 4 to use the IPv4 address of the interface and 6 to use the IPv6 
#       address of the interface
# Both types of RLOCs use priority and weight
#   priority [0-255]: Priority for the RLOC of the interface. Locators
#     with lower values are more preferable. This is used for both incoming
#     policy announcements and outgoing traffic policy management.
#   weight [0-255]: When priorities are the same for multiple RLOCs, the weight
#     indicates how to balance unicast traffic between them.

#database-mapping {
#    eid-prefix          = <ip-prefix/mask>
#    iid                 = 0
#    rloc-address {
#        address         = <string>
#        priority        = <int>
#        weight          = <int>
#    }
#    rloc-iface{
#        interface       = <string>
#        ip_version      = <4/6>
#      priority        = <int>
#        weight          = <int>
#   }
#}

# Current LISP beta-network (lisp4.net/lisp6.net) PITR addresses
# Uncomment the IPv4 or IPv6 list based on your current locators and
# comment the previous 'proxy-itrs' section


#proxy-itrs = {
# LISP beta-network IPv4 PITRs
#        69.31.31.98,                 # eqx-ash-pxtr
#        129.250.1.63,                # ntt-amer-pxtr
#        217.8.98.33,                 # intouch-pxtr-1
#        193.162.145.46,              # tdc-pxtr
#        158.38.1.92,                 # uninett-pxtr
#        203.181.249.172,             # apan-pxtr
#        202.51.247.10                # sg-nus-pxtr
# LISP beta-network IPv6 PITRs 
#        2001:590::451f:1f62,         # eqx-ash-pxtr
#        2001:418:0:1000::63,         # ntt-amer-pxtr
#        2001:200:e000:17::17,        # intouch-pxtr-1
#        2001:6C8:130:600::1,         # tdc-pxtr
#        2001:700:0:52E::4,           # uninett-pxtr
#        2001:200:e000:17::172        # apan-pxtr
#}


###############################################
#
# Miscellaneous configuration
#

# Structure to define a path involving multiple hops
#   elp-name: Name to define the ELP used as a reference in the rest of the 
#     configuration
#   elp-node: Defines each of the hops of the ELP. Several ones can be defined.
#     In most cases, the last elp-node would be the local RLOC of an xTR
#   address: IPv4 or IPv6 address of the RLOC. The address of the last elp-node 
#     should exist and be assigned to an UP interface during startup process 
#     otherwise it is discarded.
#   strict [true/false]: Not yet implemented. Use false
#   probe [true/false]: Not yet implemented. Use false
#   lookup [true/false]: Not yet implemented. Use false

#explicit-locator-path {
#    elp-name        = <string>
#    elp-node {
#        address     = <ip-address>
#        strict      = <bool>
#        probe       = <bool>
#        lookup      = <bool>
#    }
#    elp-node {
#        address     = <ip-address>
#        strict      = <bool>
#        probe       = <bool>
#        lookup      = <bool>
#    } 
#}
